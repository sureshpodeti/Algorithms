 Following texts contains the concepts of greedy algorithm, and the technique to verify the greedy approach that produces optimal solution

 Example 1: Job scheduling
    problem description: We have set of requests {1,2,...,n}; the ith request corresponds to 
    an interval of time starting at s(i) and finishing at f(i). we'll say that a  subset of the 
    requests is compatible if no two of them overlap in time, and our goal is to accept as 
    large a compatible subset as possible. compatible sets of maximum size will be called optimal

    algorithm: 
      -----------------------------------------------------------------------
      Intially Let R be the set of all requests, and let A be empty
      While R is not yet empty
            Choose a request i âˆˆ R that has the smallest finishing time
            Add request i to A
            Delete all requests from R that are not compatible with request i
      EndWhile 
      Return the set A as the set of accepted requests
      ------------------------------------------------------------------------ 
      Greedy notion: we are choosing greedily the request which has smallest finishing time
      at each sequencial step. 


     How can we ensure solution produced by our greedy algorithm is optimal(the one which we are looking for)?

    "GREEDY STAYS AHEAD" technique:
         Let A be the set returned by our greedy algorithm. what we need to show is that this
         solution is optimal. so, for purpose of comparision, let O be an optimal set of
         intervals. As, we know there may be many optimal solutions, and at best A is equal
         to a single one of them. we need to show that |A| = |O|, that is, that A contains
         the same number of intervals as O and hence is also an optimal solution


         The idea underlying the proof is: we will compare the partial solutions that the 
         greedy algorithm contructs to intial segments of the solution O, and show that the
         greedy algorithm is doing better in a step-by-step fashion

         proof:
           Let i1, ...,ik be the set of requests in A iin the order they were added to A.
           Note that |A| = k. similarly, let the set of requests in O be denoted by j1,...jm.
           our goal is to prove that m=k. Assume that the requests in O are also ordered in 
           the natural left-to-right order of the corresponding intervalthe proof is: we will compare the partial solutions that the 
         greedy algorithm contructs to intial segments of the solution O, and show that the
         greedy algorithm is doing better in a step-by-step fashion

         proof:
           Let i1, ...,ik be the set of requests in A iin the order they were added to A.
           Note that |A| = k. similarly, let the set of requests in O be denoted by j1,...jm.
           our goal is to prove that m=k. Assume that the requests in O are also ordered in 
           the natural left-to-right order of the corresponding intervals   





 Example 2:
